import {
  CaseType,
  CaseTypeId,
  CaseWithId,
  EmailOrPost,
  EnglishOrWelsh,
  HearingPreference,
  HearingPreferenceET3,
  NoAcasNumberReason,
  PayFrequency,
  PayInterval,
  Sex,
  StillWorking,
  WeeksOrMonths,
  YesOrNo,
  YesOrNoOrNotApplicable,
  YesOrNoOrNotSure,
} from '../../../main/definitions/case';
import { DefaultValues } from '../../../main/definitions/constants';
import {
  CaseState,
  ClaimTypeDiscrimination,
  ClaimTypePay,
  TellUsWhatYouWant,
  TypesOfClaim,
} from '../../../main/definitions/definition';
import { HubLinkStatus } from '../../../main/definitions/hub';
import { ET3CaseDetailsLinksStatuses } from '../../../main/definitions/links';

import { mockDocumentTypeItemFromMockDocumentUploadResponse } from './mockDocumentUploadResponse';

export const MockCaseWithIdConstants = {
  TEST_SUBMISSION_REFERENCE_NUMBER: '1234567890123456',
  TEST_RESPONDENT_NAME: 'Test Respondent Name',
  TEST_CLAIMANT_NAME: 'Test Claimant Name',
  TEST_CLAIMANT_SURNAME: 'Test Claimant Surname',
  TEST_ETHOS_CASE_REFERENCE: '6000032/2024',
};

export const mockValidCaseWithId = <CaseWithId>{
  createdDate: DefaultValues.STRING_EMPTY,
  lastModified: DefaultValues.STRING_EMPTY,
  ethosCaseReference: MockCaseWithIdConstants.TEST_ETHOS_CASE_REFERENCE,
  state: undefined,
  id: MockCaseWithIdConstants.TEST_SUBMISSION_REFERENCE_NUMBER,
  respondentName: MockCaseWithIdConstants.TEST_RESPONDENT_NAME,
  firstName: MockCaseWithIdConstants.TEST_CLAIMANT_NAME,
  lastName: MockCaseWithIdConstants.TEST_CLAIMANT_SURNAME,
  typeOfClaim: [TypesOfClaim.DISCRIMINATION],
};

export const mockValidCaseWithIdWithResponseRespondentAddress = <CaseWithId>{
  createdDate: DefaultValues.STRING_EMPTY,
  lastModified: DefaultValues.STRING_EMPTY,
  ethosCaseReference: MockCaseWithIdConstants.TEST_ETHOS_CASE_REFERENCE,
  state: undefined,
  id: MockCaseWithIdConstants.TEST_SUBMISSION_REFERENCE_NUMBER,
  respondentName: MockCaseWithIdConstants.TEST_RESPONDENT_NAME,
  firstName: MockCaseWithIdConstants.TEST_CLAIMANT_NAME,
  lastName: MockCaseWithIdConstants.TEST_CLAIMANT_SURNAME,
  typeOfClaim: [TypesOfClaim.DISCRIMINATION],
  responseRespondentAddress: {
    Country: 'England',
    PostCode: 'SL6 2DE',
    PostTown: 'Maidenhead',
    County: 'Berkshire',
    AddressLine1: '48, Tithe Barn Drive',
    AddressLine2: '49, Tithe Barn Drive',
    AddressLine3: '50, Tithe Barn Drive',
  }
};

export const mockValidCaseWithIdWithResponseRespondentAddressFields = <CaseWithId>{
  createdDate: DefaultValues.STRING_EMPTY,
  lastModified: DefaultValues.STRING_EMPTY,
  ethosCaseReference: MockCaseWithIdConstants.TEST_ETHOS_CASE_REFERENCE,
  state: undefined,
  id: MockCaseWithIdConstants.TEST_SUBMISSION_REFERENCE_NUMBER,
  respondentName: MockCaseWithIdConstants.TEST_RESPONDENT_NAME,
  firstName: MockCaseWithIdConstants.TEST_CLAIMANT_NAME,
  lastName: MockCaseWithIdConstants.TEST_CLAIMANT_SURNAME,
  typeOfClaim: [TypesOfClaim.DISCRIMINATION],
  responseRespondentAddressLine1: '48, Tithe Barn Drive',
  responseRespondentAddressLine2: '49, Tithe Barn Drive',
  responseRespondentAddressLine3: '50, Tithe Barn Drive',
  responseRespondentAddressPostCode: 'SL6 2DE',
  responseRespondentAddressPostTown: 'Maidenhead',
  responseRespondentAddressCounty: 'Berkshire',
  responseRespondentAddressCountry: 'England',
};

export const mockInvalidCaseWithId = <CaseWithId>{
  createdDate: DefaultValues.STRING_EMPTY,
  lastModified: DefaultValues.STRING_EMPTY,
  state: undefined,
  id: DefaultValues.STRING_EMPTY,
  respondentName: DefaultValues.STRING_EMPTY,
  firstName: DefaultValues.STRING_EMPTY,
  lastName: DefaultValues.STRING_EMPTY,
};

export const mockCaseWithIdWithHubLinkStatuses: CaseWithId = {
  id: '1234',
  caseType: CaseType.SINGLE,
  caseTypeId: CaseTypeId.ENGLAND_WALES,
  claimantRepresentedQuestion: YesOrNo.YES,
  claimantWorkAddressQuestion: YesOrNo.YES,
  state: CaseState.AWAITING_SUBMISSION_TO_HMCTS,
  typeOfClaim: ['discrimination', 'payRelated'],
  ClaimantPcqId: '1234',
  dobDate: {
    year: '2010',
    month: '05',
    day: '11',
  },
  claimantSex: Sex.MALE,
  preferredTitle: 'Mr',
  email: 'tester@test.com',
  address1: 'address 1',
  address2: 'address 2',
  addressPostcode: 'TEST',
  addressCountry: 'United',
  addressTown: 'Test',
  telNumber: '075',
  firstName: 'John',
  lastName: 'Doe',
  avgWeeklyHrs: 5,
  claimantPensionContribution: YesOrNoOrNotApplicable.YES,
  claimantPensionWeeklyContribution: 15,
  employeeBenefits: YesOrNo.YES,
  jobTitle: 'Developer',
  noticePeriod: YesOrNo.YES,
  noticePeriodLength: '1',
  noticePeriodUnit: WeeksOrMonths.WEEKS,
  payBeforeTax: 123,
  payAfterTax: 120,
  payInterval: PayInterval.WEEKS,
  startDate: { year: '2010', month: '05', day: '11' },
  endDate: { year: '2017', month: '05', day: '11' },
  newJob: YesOrNo.YES,
  newJobStartDate: { year: '2022', month: '08', day: '11' },
  newJobPay: 4000,
  newJobPayInterval: PayInterval.MONTHS,
  benefitsCharCount: 'Some benefits',
  pastEmployer: YesOrNo.YES,
  isStillWorking: StillWorking.WORKING,
  personalDetailsCheck: YesOrNo.YES,
  reasonableAdjustments: YesOrNo.YES,
  reasonableAdjustmentsDetail: 'Adjustments detail test',
  noticeEnds: { year: '2022', month: '08', day: '11' },
  hearingPreferences: [HearingPreference.PHONE],
  hearingAssistance: 'Hearing assistance test',
  claimantContactPreference: EmailOrPost.EMAIL,
  claimantContactLanguagePreference: EnglishOrWelsh.ENGLISH,
  claimantHearingLanguagePreference: EnglishOrWelsh.ENGLISH,
  employmentAndRespondentCheck: YesOrNo.YES,
  claimTypeDiscrimination: [ClaimTypeDiscrimination.RACE],
  claimTypePay: [ClaimTypePay.REDUNDANCY_PAY],
  claimSummaryText: 'Claim summary text',
  tellUsWhatYouWant: [TellUsWhatYouWant.COMPENSATION_ONLY],
  compensationOutcome: 'Compensation outcome',
  compensationAmount: 123,
  tribunalRecommendationRequest: 'Tribunal recommendation request',
  whistleblowingClaim: YesOrNo.YES,
  whistleblowingEntityName: 'Whistleblowing entity name',
  linkedCases: YesOrNo.YES,
  linkedCasesDetail: 'Linked Cases Detail',
  claimDetailsCheck: YesOrNo.YES,
  workAddress1: 'Respondent Address',
  workAddress2: 'That Road',
  workAddressTown: 'Anytown',
  workAddressCountry: 'England',
  workAddressPostcode: 'SW1H 9AQ',
  respondents: [
    {
      respondentName: 'Globo Corp',
      acasCert: YesOrNo.YES,
      acasCertNum: 'R111111111111',
      noAcasReason: NoAcasNumberReason.ANOTHER,
      respondentAddressLine1: 'Respondent Address',
      respondentAddressLine2: 'That Road',
      respondentAddressPostTown: 'Anytown',
      respondentAddressCountry: 'England',
      respondentAddressPostCode: 'SW1H 9AQ',
      workAddressLine1: 'Respondent Address',
      workAddressLine2: 'That Road',
      workAddressTown: 'Anytown',
      workAddressCountry: 'England',
      workAddressPostcode: 'SW1H 9AQ',
      ccdId: '3453xaa',
    },
  ],
  claimSummaryFile: {
    document_url: 'http://dm-store:8080/documents/a0c113ec-eede-472a-a59c-f2614b48177c',
    document_filename: 'document.pdf',
    document_binary_url: 'http://dm-store:8080/documents/a0c113ec-eede-472a-a59c-f2614b48177c/binary',
  },
  createdDate: 'August 19, 2022',
  lastModified: 'August 19, 2022',
  otherClaim: 'other claim description',
  hubLinksStatuses: {
    documents: HubLinkStatus.READY_TO_VIEW,
    et1ClaimForm: HubLinkStatus.NOT_YET_AVAILABLE,
    hearingDetails: HubLinkStatus.NOT_YET_AVAILABLE,
    tribunalOrders: HubLinkStatus.NOT_YET_AVAILABLE,
    contactTribunal: HubLinkStatus.OPTIONAL,
    respondentResponse: HubLinkStatus.NOT_STARTED_YET,
    tribunalJudgements: HubLinkStatus.NOT_YET_AVAILABLE,
    respondentApplications: HubLinkStatus.NOT_YET_AVAILABLE,
    requestsAndApplications: HubLinkStatus.NOT_YET_AVAILABLE,
  },
};

export const mockCaseWithIdWithRespondents: CaseWithId = {
  id: '1234',
  caseType: CaseType.SINGLE,
  caseTypeId: CaseTypeId.ENGLAND_WALES,
  claimantRepresentedQuestion: YesOrNo.YES,
  claimantWorkAddressQuestion: YesOrNo.YES,
  state: CaseState.AWAITING_SUBMISSION_TO_HMCTS,
  typeOfClaim: ['discrimination', 'payRelated'],
  ClaimantPcqId: '1234',
  dobDate: {
    year: '2010',
    month: '05',
    day: '11',
  },
  claimantSex: Sex.MALE,
  preferredTitle: 'Mr',
  email: 'tester@test.com',
  address1: 'address 1',
  address2: 'address 2',
  addressPostcode: 'TEST',
  addressCountry: 'United',
  addressTown: 'Test',
  telNumber: '075',
  firstName: 'John',
  lastName: 'Doe',
  avgWeeklyHrs: 5,
  claimantPensionContribution: YesOrNoOrNotApplicable.YES,
  claimantPensionWeeklyContribution: 15,
  employeeBenefits: YesOrNo.YES,
  jobTitle: 'Developer',
  noticePeriod: YesOrNo.YES,
  noticePeriodLength: '1',
  noticePeriodUnit: WeeksOrMonths.WEEKS,
  payBeforeTax: 123,
  payAfterTax: 120,
  payInterval: PayInterval.WEEKS,
  startDate: { year: '2010', month: '05', day: '11' },
  endDate: { year: '2017', month: '05', day: '11' },
  newJob: YesOrNo.YES,
  newJobStartDate: { year: '2022', month: '08', day: '11' },
  newJobPay: 4000,
  newJobPayInterval: PayInterval.MONTHS,
  benefitsCharCount: 'Some benefits',
  pastEmployer: YesOrNo.YES,
  isStillWorking: StillWorking.WORKING,
  personalDetailsCheck: YesOrNo.YES,
  reasonableAdjustments: YesOrNo.YES,
  reasonableAdjustmentsDetail: 'Adjustments detail test',
  noticeEnds: { year: '2022', month: '08', day: '11' },
  hearingPreferences: [HearingPreference.PHONE],
  hearingAssistance: 'Hearing assistance test',
  claimantContactPreference: EmailOrPost.EMAIL,
  claimantContactLanguagePreference: EnglishOrWelsh.ENGLISH,
  claimantHearingLanguagePreference: EnglishOrWelsh.ENGLISH,
  employmentAndRespondentCheck: YesOrNo.YES,
  claimTypeDiscrimination: [ClaimTypeDiscrimination.RACE],
  claimTypePay: [ClaimTypePay.REDUNDANCY_PAY],
  claimSummaryText: 'Claim summary text',
  tellUsWhatYouWant: [TellUsWhatYouWant.COMPENSATION_ONLY],
  compensationOutcome: 'Compensation outcome',
  compensationAmount: 123,
  tribunalRecommendationRequest: 'Tribunal recommendation request',
  whistleblowingClaim: YesOrNo.YES,
  whistleblowingEntityName: 'Whistleblowing entity name',
  linkedCases: YesOrNo.YES,
  linkedCasesDetail: 'Linked Cases Detail',
  claimDetailsCheck: YesOrNo.YES,
  workAddress1: 'Respondent Address',
  workAddress2: 'That Road',
  workAddressTown: 'Anytown',
  workAddressCountry: 'England',
  workAddressPostcode: 'SW1H 9AQ',
  respondents: [
    {
      respondentName: 'Globo Corp',
      acasCert: YesOrNo.YES,
      acasCertNum: 'R111111111111',
      noAcasReason: NoAcasNumberReason.ANOTHER,
      respondentAddressLine1: 'Respondent Address',
      respondentAddressLine2: 'That Road',
      respondentAddressPostTown: 'Anytown',
      respondentAddressCountry: 'England',
      respondentAddressPostCode: 'SW1H 9AQ',
      workAddressLine1: 'Respondent Address',
      workAddressLine2: 'That Road',
      workAddressTown: 'Anytown',
      workAddressCountry: 'England',
      workAddressPostcode: 'SW1H 9AQ',
      respondentAddress: {
        AddressLine1: 'Test address line 1',
        AddressLine2: 'Test address line 2',
        AddressLine3: 'Test address line 3',
        County: 'Test county',
        PostTown: 'Anytown',
        PostCode: 'SW1H 9AQ',
        Country: 'England',
      },
      ccdId: '3453xaa',
      idamId: '1234',
    },
  ],
  claimSummaryFile: {
    document_url: 'http://dm-store:8080/documents/a0c113ec-eede-472a-a59c-f2614b48177c',
    document_filename: 'document.pdf',
    document_binary_url: 'http://dm-store:8080/documents/a0c113ec-eede-472a-a59c-f2614b48177c/binary',
  },
  createdDate: 'August 19, 2022',
  lastModified: 'August 19, 2022',
  otherClaim: 'other claim description',
};

export const mockCaseWithIdForET3DataModelUtilConvertSelectedRespondentToRespondentTypeTest: CaseWithId = {
  id: 'testCaseWithId_id',
  state: CaseState.ACCEPTED,
  createdDate: 'createdDate',
  lastModified: 'lastModified',
  responseStatus: 'ready',
  responseToClaim: 'responseToClaim',
  rejectionReason: 'rejectionReason',
  rejectionReasonOther: 'rejectionReasonOther',
  responseOutOfTime: 'responseOutOfTime',
  responseNotOnPrescribedForm: 'responseNotOnPrescribedForm',
  responseRequiredInfoAbsent: 'responseRequiredInfoAbsent',
  responseNotes: 'responseNotes',
  responseReferredToJudge: 'responseReferredToJudge',
  responseReturnedFromJudge: 'responseReturnedFromJudge',
  respondentName: 'respondentName',
  respondentType: 'respondentType',
  respondentOrganisation: 'respondentOrganisation',
  respondentFirstName: 'respondentFirstName',
  respondentLastName: 'respondentLastName',
  respondentACASQuestion: YesOrNo.YES,
  respondentACAS: 'respondentACAS',
  respondentACASNo: NoAcasNumberReason.ANOTHER,
  respondentAddressLine1: 'respondentAddressLine1',
  respondentAddressLine2: 'respondentAddressLine2',
  respondentAddressLine3: 'respondentAddressLine3',
  respondentAddressPostTown: 'respondentAddressPostTown',
  respondentAddressCounty: 'respondentAddressCounty',
  respondentAddressPostCode: 'respondentAddressPostCode',
  respondentAddressCountry: 'respondentAddressCountry',
  respondentPhone1: 'respondentPhone1',
  respondentPhone2: 'respondentPhone2',
  respondentEmail: 'respondentEmail',
  respondentContactPreference: 'respondentContactPreference',
  responseStruckOut: YesOrNo.YES,
  responseStruckOutDate: 'responseStruckOutDate',
  responseStruckOutChairman: 'responseStruckOutChairman',
  responseStruckOutReason: 'responseStruckOutReason',
  responseRespondentAddressLine1: 'responseRespondentAddressLine1',
  responseRespondentAddressLine2: 'responseRespondentAddressLine2',
  responseRespondentAddressLine3: 'responseRespondentAddressLine3',
  responseRespondentAddressPostTown: 'responseRespondentAddressPostTown',
  responseRespondentAddressCounty: 'responseRespondentAddressCounty',
  responseRespondentAddressPostCode: 'responseRespondentAddressPostCode',
  responseRespondentAddressCountry: 'responseRespondentAddressCountry',
  responseRespondentPhone1: 'responseRespondentPhone1',
  responseRespondentPhone2: 'responseRespondentPhone2',
  responseRespondentEmail: 'responseRespondentEmail',
  responseRespondentContactPreference: EmailOrPost.EMAIL,
  responseReceived: YesOrNo.YES,
  responseReceivedDate: 'responseReceivedDate',
  responseReceivedCount: 'responseReceivedCount',
  responseRespondentNameQuestion: YesOrNo.YES,
  responseRespondentName: 'responseRespondentName',
  responseContinue: YesOrNo.YES,
  responseCounterClaim: 'responseCounterClaim',
  responseReference: 'responseReference',
  extensionRequested: YesOrNo.YES,
  extensionGranted: YesOrNo.YES,
  extensionDate: 'extensionDate',
  extensionResubmitted: YesOrNo.YES,
  et3IsThereAnEt3Response: YesOrNo.YES,
  et3NoEt3Response: 'et3NoEt3Response',
  et3GeneralNotes: 'et3GeneralNotes',
  et3IsThereACompaniesHouseSearchDocument: YesOrNo.YES,
  et3GeneralNotesCompanyHouse: 'et3GeneralNotesCompanyHouse',
  et3IsThereAnIndividualSearchDocument: YesOrNo.YES,
  et3GeneralNotesIndividualInsolvency: 'et3GeneralNotesIndividualInsolvency',
  et3LegalIssue: YesOrNo.YES,
  et3LegalIssueGiveDetails: 'et3LegalIssueGiveDetails',
  et3ContestClaimGiveDetails: 'et3ContestClaimGiveDetails',
  et3GeneralNotesLegalEntity: 'et3GeneralNotesLegalEntity',
  et3ResponseInTime: YesOrNo.YES,
  et3ResponseInTimeDetails: 'et3ResponseInTimeDetails',
  et3DoWeHaveRespondentsName: YesOrNo.YES,
  et3GeneralNotesRespondentName: 'et3GeneralNotesRespondentName',
  et3DoesRespondentsNameMatch: YesOrNo.YES,
  et3RespondentNameMismatchDetails: 'et3RespondentNameMismatchDetails',
  et3GeneralNotesRespondentNameMatch: 'et3GeneralNotesRespondentNameMatch',
  et3DoWeHaveRespondentsAddress: YesOrNo.YES,
  et3DoesRespondentsAddressMatch: YesOrNo.YES,
  et3RespondentAddressMismatchDetails: 'et3RespondentAddressMismatchDetails',
  et3GeneralNotesRespondentAddress: 'et3GeneralNotesRespondentAddress',
  et3GeneralNotesAddressMatch: 'et3GeneralNotesAddressMatch',
  et3IsCaseListedForHearing: YesOrNo.YES,
  et3IsCaseListedForHearingDetails: YesOrNo.YES,
  et3GeneralNotesCaseListed: 'et3GeneralNotesCaseListed',
  et3IsThisLocationCorrect: YesOrNo.YES,
  et3GeneralNotesTransferApplication: 'et3GeneralNotesTransferApplication',
  et3RegionalOffice: 'et3RegionalOffice',
  et3WhyWeShouldChangeTheOffice: 'et3WhyWeShouldChangeTheOffice',
  et3ContestClaim: YesOrNo.YES,
  et3GeneralNotesContestClaim: 'et3GeneralNotesContestClaim',
  et3ContractClaimSection7: YesOrNo.YES,
  et3ContractClaimSection7Details: 'et3ContractClaimSection7Details',
  et3GeneralNotesContractClaimSection7: 'et3GeneralNotesContractClaimSection7',
  et3Rule26: YesOrNo.YES,
  et3Rule26Details: 'et3Rule26Details',
  et3SuggestedIssues: ['et3SuggestedIssues'],
  et3SuggestedIssuesStrikeOut: 'et3SuggestedIssuesStrikeOut',
  et3SuggestedIssueInterpreters: 'et3SuggestedIssueInterpreters',
  et3SuggestedIssueJurisdictional: 'et3SuggestedIssueJurisdictional',
  et3SuggestedIssueAdjustments: 'et3SuggestedIssueAdjustments',
  et3SuggestedIssueRule50: 'et3SuggestedIssueRule50',
  et3SuggestedIssueTimePoints: 'et3SuggestedIssueTimePoints',
  et3GeneralNotesRule26: 'et3GeneralNotesRule26',
  et3AdditionalInformation: 'et3AdditionalInformation',
  et3VettingCompleted: YesOrNo.YES,
  et3ResponseIsClaimantNameCorrect: YesOrNo.YES,
  et3ResponseClaimantNameCorrection: 'et3ResponseClaimantNameCorrection',
  et3ResponseRespondentCompanyNumber: 'et3ResponseRespondentCompanyNumber',
  et3ResponseRespondentEmployerType: 'et3ResponseRespondentEmployerType',
  et3ResponseRespondentPreferredTitle: 'et3ResponseRespondentPreferredTitle',
  et3ResponseRespondentContactName: 'et3ResponseRespondentContactName',
  et3ResponseDXAddress: 'et3ResponseDXAddress',
  et3ResponseContactReason: 'et3ResponseContactReason',
  et3ResponseLanguagePreference: EnglishOrWelsh.ENGLISH,
  et3ResponseHearingRepresentative: ['et3ResponseHearingRepresentative'],
  et3ResponseHearingRespondent: [HearingPreferenceET3.VIDEO],
  et3ResponseEmploymentCount: 'et3ResponseEmploymentCount',
  et3ResponseMultipleSites: YesOrNo.YES,
  et3ResponseSiteEmploymentCount: 'et3ResponseSiteEmploymentCount',
  et3ResponseAcasAgree: YesOrNo.YES,
  et3ResponseAcasAgreeReason: 'et3ResponseAcasAgreeReason',
  et3ResponseAreDatesCorrect: YesOrNoOrNotApplicable.NOT_APPLICABLE,
  et3ResponseEmploymentStartDate: {
    year: '2020',
    month: '01',
    day: '01',
  },
  et3ResponseEmploymentEndDate: {
    year: '2022',
    month: '01',
    day: '01',
  },
  et3ResponseEmploymentInformation: 'et3ResponseEmploymentInformation',
  et3ResponseContinuingEmployment: YesOrNoOrNotApplicable.YES,
  et3ResponseIsJobTitleCorrect: YesOrNoOrNotApplicable.YES,
  et3ResponseCorrectJobTitle: 'et3ResponseCorrectJobTitle',
  et3ResponseClaimantWeeklyHours: YesOrNoOrNotApplicable.NOT_APPLICABLE,
  et3ResponseClaimantCorrectHours: 'et3ResponseClaimantCorrectHours',
  et3ResponseEarningDetailsCorrect: YesOrNoOrNotApplicable.YES,
  et3ResponsePayFrequency: PayFrequency.ANNUALLY,
  et3ResponsePayBeforeTax: '45000',
  et3ResponsePayTakehome: '40000',
  et3ResponseIsNoticeCorrect: YesOrNoOrNotApplicable.YES,
  et3ResponseCorrectNoticeDetails: '8 weeks',
  et3ResponseIsPensionCorrect: YesOrNoOrNotApplicable.NOT_APPLICABLE,
  et3ResponsePensionCorrectDetails: 'et3ResponsePensionCorrectDetails',
  et3ResponseRespondentContestClaim: YesOrNo.YES,
  et3ResponseContestClaimDocument: [
    {
      id: '1',
      value: mockDocumentTypeItemFromMockDocumentUploadResponse.value,
    },
  ],
  et3ResponseContestClaimDetails: 'et3ResponseContestClaimDetails',
  et3ResponseEmployerClaim: YesOrNo.YES,
  et3ResponseEmployerClaimDetails: 'Test response employer claim details',
  et3ResponseRespondentSupportNeeded: YesOrNoOrNotSure.NOT_SURE,
  et3ResponseRespondentSupportDetails: 'et3ResponseRespondentSupportDetails',
  contactDetailsSection: 'contactDetailsSection',
  employerDetailsSection: 'employerDetailsSection',
  conciliationAndEmployeeDetailsSection: 'conciliationAndEmployeeDetailsSection',
  payPensionBenefitDetailsSection: 'payPensionBenefitDetailsSection',
  contestClaimSection: 'contestClaimSection',
  employersContractClaimSection: 'employersContractClaimSection',
  idamId: 'idamId',
  et3CaseDetailsLinksStatuses: new ET3CaseDetailsLinksStatuses(),
  et3IsRespondentAddressCorrect: YesOrNo.YES,
  et3Status: 'inProgress',
  et3HubLinksStatuses: mockCaseWithIdWithHubLinkStatuses.et3HubLinksStatuses,
  et3FormWelsh: {
    upload_timestamp: 'upload_timestamp_ET3FormWelsh',
    category_id: 'categoryId_ET3FormWelsh',
    document_url: 'documentUrl_ET3FormWelsh',
    document_filename: 'document_ET3FormWelsh.pdf',
    document_binary_url: 'testDocumentBinaryUrl_ET3FormWelsh',
  },
  et3Form: {
    upload_timestamp: 'upload_timestamp_ET3FormEnglish',
    category_id: 'testCategoryId_ET3FormEnglish',
    document_url: 'testDocumentUrl_ET3FormEnglish',
    document_filename: 'document_ET3FormEnglish.pdf',
    document_binary_url: 'testDocumentBinaryUrl_ET3FormEnglish',
  },
  claimantWorkAddressLine1: 'claimantWorkAddressLine1',
  claimantWorkAddressLine2: 'claimantWorkAddressLine2',
  claimantWorkAddressLine3: 'claimantWorkAddressLine3',
  claimantWorkAddressPostTown: 'claimantWorkAddressPostTown',
  claimantWorkAddressCounty: 'claimantWorkAddressCounty',
  claimantWorkAddressPostCode: 'claimantWorkAddressPostCode',
  claimantWorkAddressCountry: '',
  workAddressLine1: 'workAddressLine1',
  workAddressLine2: 'workAddressLine2',
  workAddressTown: 'workAddressTown',
  workAddressCountry: 'workAddressCountry',
  workAddressPostcode: 'workAddressPostcode',
  et3CompanyHouseDocumentBinaryUrl: 'et3CompanyHouseDocumentBinaryUrl',
  et3CompanyHouseDocumentUrl: 'et3CompanyHouseDocumentUrl',
  et3CompanyHouseDocumentFileName: 'et3CompanyHouseDocumentFileName',
  et3CompanyHouseDocumentCategoryId: 'et3CompanyHouseDocumentCategoryId',
  et3CompanyHouseDocumentUploadTimestamp: 'et3CompanyHouseDocumentUploadTimestamp',
  et3IndividualInsolvencyDocumentBinaryUrl: 'et3IndividualInsolvencyDocumentBinaryUrl',
  et3IndividualInsolvencyDocumentUrl: 'et3IndividualInsolvencyDocumentUrl',
  et3IndividualInsolvencyDocumentFileName: 'et3IndividualInsolvencyDocumentFileName',
  et3IndividualInsolvencyDocumentCategoryId: 'et3IndividualInsolvencyDocumentCategoryId',
  et3IndividualInsolvencyDocumentUploadTimestamp: 'et3IndividualInsolvencyDocumentUploadTimestamp',
  et3VettingDocumentBinaryUrl: 'et3VettingDocumentBinaryUrl',
  et3VettingDocumentUrl: 'et3VettingDocumentUrl',
  et3VettingDocumentFileName: 'et3VettingDocumentFileName',
  et3VettingDocumentCategoryId: 'et3VettingDocumentCategoryId',
  et3VettingDocumentUploadTimestamp: 'et3VettingDocumentUploadTimestamp',
  et3ResponseEmployerClaimDocumentBinaryUrl: 'et3ResponseEmployerClaimDocumentBinaryUrl',
  et3ResponseEmployerClaimDocumentUrl: 'et3ResponseEmployerClaimDocumentUrl',
  et3ResponseEmployerClaimDocumentFileName: 'et3ResponseEmployerClaimDocumentFileName',
  et3ResponseEmployerClaimDocumentCategoryId: 'et3ResponseEmployerClaimDocumentCategoryId',
  et3ResponseEmployerClaimDocumentUploadTimestamp: 'et3ResponseEmployerClaimDocumentUploadTimestamp',
  et3ResponseRespondentSupportDocumentBinaryUrl: 'et3ResponseRespondentSupportDocumentBinaryUrl',
  et3ResponseRespondentSupportDocumentUrl: 'et3ResponseRespondentSupportDocumentUrl',
  et3ResponseRespondentSupportDocumentFileName: 'et3ResponseRespondentSupportDocumentFileName',
  et3ResponseRespondentSupportDocumentCategoryId: 'et3ResponseRespondentSupportDocumentCategoryId',
  et3ResponseRespondentSupportDocumentUploadTimestamp: 'et3ResponseRespondentSupportDocumentUploadTimestamp',
  et3FormBinaryUrl: 'et3FormBinaryUrl',
  et3FormUrl: 'et3FormUrl',
  et3FormFileName: 'et3FormFileName',
  et3FormCategoryId: 'et3FormCategoryId',
  et3FormUploadTimestamp: 'et3FormUploadTimestamp',
  et3FormWelshBinaryUrl: 'et3FormWelshBinaryUrl',
  et3FormWelshUrl: 'et3FormWelshUrl',
  et3FormWelshFileName: 'et3FormWelshFileName',
  et3FormWelshCategoryId: 'et3FormWelshCategoryId',
  et3FormWelshUploadTimestamp: 'et3FormWelshUploadTimestamp',
};
